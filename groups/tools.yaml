id: "/"
apps: []
groups:
- id: "/tools"
  apps:
  - id: "/tools/memcache"
    instances: 1
    cpus: 1
    mem: 512
    disk: 0
    constraints:
    - - hostname
      - UNIQUE
    uris: []
    ports:
    - 1980
    requirePorts: false
    backoffSeconds: 1
    backoffFactor: 1.15
    maxLaunchDelaySeconds: 3600
    container:
      type: DOCKER
      volumes: []
      docker:
        image: memcached:1.5.4
        network: HOST
        privileged: false
        parameters: []
        forcePullImage: false
    healthChecks:
      - protocol: COMMAND
        command:
          value: /bin/true
        gracePeriodSeconds: 3
        intervalSeconds: 10
        timeoutSeconds: 10
        maxConsecutiveFailures: 3
    dependencies: []
    upgradeStrategy:
      minimumHealthCapacity: 0.5
      maximumOverCapacity: 0
  - id: "/tools/rabbitmq"
    instances: 1
    cpus: 1
    mem: 512
    disk: 0
    executor: ''
    constraints:
    - - hostname
      - UNIQUE
    uris: []
    ports:
    - 15672
    requirePorts: false
    backoffSeconds: 1
    backoffFactor: 1.15
    maxLaunchDelaySeconds: 3600
    container:
      type: DOCKER
      docker:
        image: rabbitmq:3.7.3-management
        network: HOST
        privileged: true
        parameters: []
        forcePullImage: false
    healthChecks:
      - path: "/"
        protocol: HTTP
        portIndex: 0
        gracePeriodSeconds: 300
        intervalSeconds: 20
        timeoutSeconds: 20
        maxConsecutiveFailures: 3
        ignoreHttp1xx: false
    dependencies: []
    upgradeStrategy:
      minimumHealthCapacity: 0.5
      maximumOverCapacity: 0
  groups:
  - id: "/tools/docker"
    apps:
    - id: "/tools/docker/registry"
      instances: 1
      cpus: 0.5
      mem: 4096
      disk: 0
      executor: ''
      constraints: []
      uris: []
      ports:
      - 5000
      requirePorts: false
      backoffSeconds: 1
      backoffFactor: 1.15
      maxLaunchDelaySeconds: 3600
      container:
        type: DOCKER
        volumes:
        - containerPath: "/docker_storage"
          hostPath: "/usr/local/docker/registry"
          mode: RW
        docker:
          image: registry
          network: BRIDGE
          portMappings:
          - containerPort: 5000
            hostPort: 0
            servicePort: 5000
            protocol: tcp
          privileged: false
          parameters: []
          forcePullImage: false
      healthChecks:
        - protocol: COMMAND
          command:
            value: /bin/true
          gracePeriodSeconds: 3
          intervalSeconds: 10
          timeoutSeconds: 10
          maxConsecutiveFailures: 3
      dependencies: []
      upgradeStrategy:
        minimumHealthCapacity: 1
        maximumOverCapacity: 1
    groups: []
    dependencies: []
  dependencies: []
dependencies: []
